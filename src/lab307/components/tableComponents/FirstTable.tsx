import { FaQuestion } from "react-icons/fa6";
import { Modal } from "../../../components";
import { useTableData } from "../../context";
import clsx from "clsx";
import { usePointsContext } from "../../context/PointsContext.tsx";


export function FirstTable() {
    const { xc, yr } = usePointsContext()
    const {
        firstTableData,
        firstTablePointer,
        setFirstTablePointer,
        deleteFirstTableEntry,
        appendFirstTableEntry
    } = useTableData()

    return (
        <>
            <Modal id="first-table-instruction-modal">
                <div className="text-start">
                    <h3 className="text-3xl font-bold text-center mb-2 text-accent">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∫ —Ç–∞–±–ª–∏—Ü–µ 1</h3>
                    <ol className="list-decimal pl-4 pt-4 text-gray-800">
                        <li>–ü–æ–¥–±–µ—Ä–∏—Ç–µ —Ç–∞–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ —É—Å–∏–ª–µ–Ω–∏—è ùêæùë•, ùêæùë¶ —Ä–µ–≥—É–ª—è—Ç–æ—Ä–∞–º–∏ ¬´–í–û–õ–¨–¢/–î–ï–õ¬ª, —á—Ç–æ–±—ã
                            —Å–∏–≥–Ω–∞–ª—ã –≤ –∫–∞–∂–¥–æ–º –∏–∑ –∫–∞–Ω–∞–ª–æ–≤ –∑–∞–Ω–∏–º–∞–ª–∏ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—É—é —á–∞—Å—Ç—å —ç–∫—Ä–∞–Ω–∞ (–ø—Ä–∏
                            –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ —É–º–µ–Ω—å—à–∏—Ç—å –∞–º–ø–ª–∏—Ç—É–¥—É –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞).
                        </li>
                        <li>–° –ø–æ–º–æ—â—å—é —Ä—É—á–µ–∫ —Å–º–µ—â–µ–Ω–∏—è —Å–∏–≥–Ω–∞–ª–∞ –∫–∞–Ω–∞–ª–æ–≤ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ —Ä–∞—Å–ø–æ–ª–æ–∂–∏—Ç–µ –ø–µ—Ç–ª—é —Ç–∞–∫, —á—Ç–æ–±—ã –µ–µ —Ü–µ–Ω—Ç—Ä
                            —Å–æ–≤–ø–∞–ª —Å –Ω–∞—á–∞–ª–æ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –Ω–∞ —ç–∫—Ä–∞–Ω–µ. –ü—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –≤—ã–±–æ—Ä–µ –º–∞—Å—à—Ç–∞–±–æ–≤ –ø–æ –æ—Å—è–º –ø–µ—Ç–ª—è –¥–æ–ª–∂–Ω–∞
                            –∏–º–µ—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã, –Ω–æ –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç—å –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —ç–∫—Ä–∞–Ω–∞.
                        </li>
                        <li>–ó–∞—Ñ–∏–∫—Å–∏—Ä—É–π—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã <b>X_c</b> –∏ <b>Y_r</b> –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è –ø–µ—Ç–ª–∏ –≥–∏—Å—Ç–µ—Ä–µ–∑–∏—Å–∞ —Å –æ—Å—è–º–∏
                            –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ <span className="font-mono bg-gray-100 px-1 rounded">–°–Ω—è—Ç—å –∏–∑–º–µ—Ä–µ–Ω–∏—è</span>.
                        </li>
                        <li>–í—ã—á–∏—Å–ª–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã ùõº –∏ ùõΩ. –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∫–æ—ç—Ä—Ü–∏—Ç–∏–≤–Ω—É—é —Å–∏–ª—É <b>ùêªùëê</b> –∏ –æ—Å—Ç–∞—Ç–æ—á–Ω—É—é
                            –∏–Ω–¥—É–∫—Ü–∏—é <b>ùêµùëü</b> –¥–ª—è –∏—Å—Å–ª–µ–¥—É–µ–º–æ–≥–æ –æ–±—Ä–∞–∑—Ü–∞.
                        </li>
                    </ol>
                </div>
            </Modal>
            <div className="w-full flex flex-col gap-y-3 items-center">
                <div className="w-full flex justify-between">
                    <button className="button-outline px-4 text-nowrap"
                            onClick={() => appendFirstTableEntry({ xc, yr })}
                            disabled={firstTableData.length >= 1 && Number.isNaN(xc) || Number.isNaN(yr)}>
                        –°–Ω—è—Ç—å –∏–∑–º–µ—Ä–µ–Ω–∏—è
                    </button>
                    <div/>
                    <div className="flex gap-x-16 items-start">
                        <button className="button-outline px-4" onClick={deleteFirstTableEntry}>–û—á–∏—Å—Ç–∏—Ç—å
                            –≤—ã–¥–µ–ª–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É
                        </button>
                        <button className="btn btn-sm cursor-pointer bg-background hover:bg-background border-accent hover:border-accent
                        text-accent font-bold btn-circle p-1.5 text-xl flex items-center justify-center"
                                onClick={() => (document.getElementById('first-table-instruction-modal') as HTMLDialogElement).showModal()}>
                            <FaQuestion/>
                        </button>
                    </div>
                </div>
                <h4 className="text-xl text-center">–¢–∞–±–ª–∏—Ü–∞ 1</h4>

                <div className="w-full overflow-x-auto">
                    <table className="max-lg:text-sm text-nowrap mx-auto overflow-hidden">
                        <colgroup>
                            <col className="w-28"/>
                            <col className="w-56"/>
                            <col className="w-52"/>
                            <col className="w-56"/>
                        </colgroup>
                        <thead className="bg-background py-2 ">
                        <tr className="text-center border-2 text-lg border-accent rounded-xl ">
                            <th className="py-2 border-2 border-accent">X_c, –¥–µ–ª</th>
                            <th className="py-2 border-2 border-accent">Y_r, –¥–µ–ª</th>
                            <th className="py-2 border-2 border-accent">H_c, A/–º</th>
                            <th className="py-2 border-2 border-accent">B_r, –¢–ª</th>
                        </tr>

                        </thead>
                        <tbody>
                        {
                            firstTableData.map((entry, index) => (
                                <tr key={index}
                                    className={clsx("text-center border-2 border-accent rounded-xl", index === firstTablePointer && 'bg-primary/50')}
                                    onClick={() => setFirstTablePointer(index)}>
                                    <td className="py-2 border-2 border-accent font-bold  h-11"
                                        rowSpan={6}>{entry.xc?.toFixed(1) ?? ''}</td>
                                    <td className="py-2 border-2 border-accent font-bold  h-11"
                                        rowSpan={6}>{entry.yr?.toFixed(1) ?? ''}</td>
                                    <td className="py-2 border-2 border-accent font-bold  h-11"
                                        rowSpan={6}/>
                                    <td className="py-2 border-2 border-accent font-bold  h-11"
                                        rowSpan={6}/>
                                </tr>
                            ))
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </>

    )
}
